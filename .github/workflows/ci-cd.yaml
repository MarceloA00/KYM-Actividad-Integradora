name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.serverStatus()'" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      MONGO_URI: mongodb://localhost:27017/testdb
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - working-directory: ./backend
        run: npm ci
      - working-directory: ./backend
        run: |
          npm test

  build-docker-images:
    needs: [build-test-backend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push backend
      working-directory: ./backend
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-backend:latest .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-backend:latest
    
    - name: Build and push frontend
      working-directory: ./frontend
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-frontend:latest .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-frontend:latest

  deploy-to-kubernetes:
    needs: build-docker-images
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'
    
    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install student-crud ./helm/student-crud \
          --set backend.image.repository=${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-backend \
          --set frontend.image.repository=${{ secrets.DOCKER_HUB_USERNAME }}/student-crud-frontend \
          --atomic --wait